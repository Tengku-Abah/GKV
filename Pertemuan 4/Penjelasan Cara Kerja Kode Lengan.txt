Penjelasan Cara Kerja Kode Lengan

Kode "Lengan Bergerak" menampilkan simulasi sederhana dari lengan yang dapat digerakkan menggunakan keyboard. Berikut adalah penjelasan cara kerja kode tersebut:

1. Inisialisasi dan Variabel Utama


static int shoulder = 0, elbow = 0;

Kode dimulai dengan mendeklarasikan dua variabel statis:
- `shoulder`: Menyimpan sudut rotasi untuk bahu (0-360 derajat)
- `elbow`: Menyimpan sudut rotasi untuk siku (0-360 derajat)

2. Fungsi Init


void init(void) {
    glClearColor (0.0, 0.0, 0.0, 0.0);
    glShadeModel (GL_FLAT);
}

Fungsi ini menginisialisasi tampilan dengan:
- Mengatur warna latar belakang menjadi hitam (0,0,0,0)
- Mengatur model bayangan menjadi flat (GL_FLAT)

3. Fungsi Display

Fungsi `display()` adalah inti dari kode ini, yang menggambar lengan:


void display(void) {
    glClear (GL_COLOR_BUFFER_BIT);
    glPushMatrix();
    
    // Posisi awal dan rotasi bahu
    glTranslatef (-1.0, 0.0, 0.0);
    glRotatef ((GLfloat) shoulder, 0.0, 0.0, 1.0);
    glTranslatef (1.0, 0.0, 0.0);
    
    // Menggambar lengan bagian atas (bahu)
    glPushMatrix();
    glScalef (2.0, 0.4, 1.0);
    glutWireCube (1.0);
    glPopMatrix();
    
    // Posisi dan rotasi siku
    glTranslatef (1.0, 0.0, 0.0);
    glRotatef ((GLfloat) elbow, 0.0, 0.0, 1.0);
    glTranslatef (1.0, 0.0, 0.0);
    
    // Menggambar lengan bagian bawah (siku ke tangan)
    glPushMatrix();
    glScalef (2.0, 0.4, 1.0);
    glutWireCube (1.0);
    glPopMatrix();
    
    glPopMatrix();
    glutSwapBuffers();
}

Langkah-langkah yang terjadi:

1. Membersihkan buffer warna dengan `glClear()`
2. Menyimpan matriks transformasi saat ini dengan `glPushMatrix()`
3. Melakukan transformasi untuk posisi bahu:
   - Mentranslasi (-1,0,0) untuk menggeser titik pusat rotasi
   - Merotasi dengan sudut `shoulder` pada sumbu Z (0,0,1)
   - Mentranslasi (1,0,0) untuk mengembalikan posisi
4. Menggambar lengan bagian atas dengan `glutWireCube()` yang diskala menjadi bentuk persegi panjang
5. Melakukan transformasi untuk posisi siku (relative terhadap bahu):
   - Mentranslasi ke ujung lengan bagian atas
   - Merotasi dengan sudut `elbow` pada sumbu Z
   - Mentranslasi lagi untuk posisi lengan bagian bawah
6. Menggambar lengan bagian bawah dengan cara yang sama
7. Mengembalikan matriks ke keadaan semula dengan `glPopMatrix()`
8. Menukar buffer depan dan belakang untuk animasi yang mulus dengan `glutSwapBuffers()`

4. Fungsi Reshape


void reshape(int w, int h) {
    glViewport (0, 0, (GLsizei) w, (GLsizei) h);
    glMatrixMode (GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(65.0, (GLfloat) w/(GLfloat) h, 1.0, 20.0);
    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();
    glTranslatef (0.0, 0.0, -5.0);
}

Fungsi ini dipanggil saat ukuran jendela berubah:
- Mengatur viewport sesuai ukuran jendela baru
- Mengatur matriks proyeksi dengan perspektif 65 derajat
- Mengatur matriks modelview dan mentranslasi kamera mundur 5 satuan

5. Fungsi Keyboard


void keyboard(unsigned char key, int x, int y) {
    switch (key) {
        case 's': shoulder = (shoulder + 5) % 360; break;
        case 'S': shoulder = (shoulder - 5) % 360; break;
        case 'e': elbow = (elbow + 5) % 360; break;
        case 'E': elbow = (elbow - 5) % 360; break;
        case 27: exit(0); break; // Tombol Escape
    }
    glutPostRedisplay();
}

Fungsi ini menangkap input keyboard:
- `s`: Memutar bahu searah jarum jam (+5 derajat)
- `S`: Memutar bahu berlawanan jarum jam (-5 derajat)
- `e`: Memutar siku searah jarum jam (+5 derajat)
- `E`: Memutar siku berlawanan jarum jam (-5 derajat)
- Tombol Escape (27): Keluar dari program

`glutPostRedisplay()` meminta agar fungsi display dipanggil kembali untuk menggambar ulang lengan dengan sudut yang baru.

6. Fungsi Main


int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode (GLUT_DOUBLE | GLUT_RGB);
    glutInitWindowSize (700, 600);
    glutInitWindowPosition (100, 100);
    glutCreateWindow (argv[0]);
    init();
    glutDisplayFunc(display);
    glutReshapeFunc(reshape);
    glutKeyboardFunc(keyboard);
    glutMainLoop();
    return 0;
}

Fungsi main menginisialisasi GLUT dan mengatur callback:
- Mengatur mode tampilan dengan double buffer dan RGB
- Membuat jendela berukuran 700x600 pada posisi (100,100)
- Menetapkan fungsi display, reshape, dan keyboard sebagai callback
- Memulai loop utama GLUT dengan `glutMainLoop()`

Ringkasan

Kode lengan bergerak ini menggunakan hierarki transformasi matriks untuk mensimulasikan sendi lengan. Bagian bahu dapat berputar secara independen, sedangkan pergerakan siku relatif terhadap bahu (sehingga saat bahu berputar, seluruh lengan termasuk siku berputar juga). Penggunaan `glPushMatrix()` dan `glPopMatrix()` memungkinkan transformasi yang terstruktur dan hierarkis.
